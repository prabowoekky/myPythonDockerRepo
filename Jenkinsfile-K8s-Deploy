pipeline {
    agent any
        environment {
        //once you sign up for Docker hub, use that user_id here
        registry = "kube"
        //- update your credentials ID after creating credentials for connecting to Docker Hub
        registryCredential = 'acr-credentials'
        registryUrl = 'azureaksdrc.azurecr.io'
        dockerImage = ''
    }
    stages {

        stage ('checkout') {
            steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/prabowoekky/myPythonDockerRepo']]])
            }
        }
       
        stage ('Build docker image') {
            steps {
                script {
                dockerImage = docker.build registry + ":$BUILD_NUMBER"
                //dockerImage = docker.build registry + ":$BUILD_NUMBER"

                }
            }
        }
       
         // Uploading Docker images into Docker Hub
    stage('Upload Image') {
     steps{   
         script {
            docker.withRegistry( "http://${registryUrl}", registryCredential ) {
            dockerImage.push()
            }
        }
      }
    }

    stage('Remove Unused docker image') {
      steps{
        sh "docker rmi $registryUrl/$registry:$BUILD_NUMBER"
      }
    }
   
    stage ('K8S Deploy') {
        steps {
            script {
                sh 'kubectl apply -f k8s-deployment.yaml --token 0839523143023d5f937a90d196a0fb3dea1bf3485317c2c679b0d77478682d7607dabd0a43a0e844725c170d2f541df9405bcab5d467a8e375534290d0dc6ceb --server https://eq-aksdc-dns-2008bf15.hcp.eastasia.azmk8s.io:443'
                sh 'kubectl set image deployment/my-python-deployment my-python-app=$registry:$BUILD_NUMBER'
            }
        }
    }
  
    }  
}

always {
  // remove built docker image and prune system
  print 'Cleaning up the Docker system.'
  sh 'docker system prune -f'
}
